import requests
import json
import unicodedata

class Yarrrml_api():
    def __init__(self,object):
        self.object=object
        self.rml_mapping="<http://mapping.example.com/rules_000> a <http://rdfs.org/ns/void#Dataset>;\n    <http://rdfs.org/ns/void#exampleResource> <http://mapping.example.com/map_person_000>.\n<http://mapping.example.com/map_person_000> <http://semweb.mmlab.be/ns/rml#logicalSource> <http://mapping.example.com/source_000>.\n<http://mapping.example.com/source_000> a <http://semweb.mmlab.be/ns/rml#LogicalSource>;\n    <http://semweb.mmlab.be/ns/rml#source> \"data.json\";\n    <http://semweb.mmlab.be/ns/rml#iterator> \"$.objects[*]\";\n    <http://semweb.mmlab.be/ns/rml#referenceFormulation> <http://semweb.mmlab.be/ns/ql#JSONPath>.\n<http://mapping.example.com/map_person_000> a <http://www.w3.org/ns/r2rml#TriplesMap>;\n    <http://www.w3.org/2000/01/rdf-schema#label> \"person\".\n<http://mapping.example.com/s_000> a <http://www.w3.org/ns/r2rml#SubjectMap>.\n<http://mapping.example.com/map_person_000> <http://www.w3.org/ns/r2rml#subjectMap> <http://mapping.example.com/s_000>.\n<http://mapping.example.com/s_000> <http://www.w3.org/ns/r2rml#template> \"http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/{id}\".\n<http://mapping.example.com/pom_000> a <http://www.w3.org/ns/r2rml#PredicateObjectMap>.\n<http://mapping.example.com/map_person_000> <http://www.w3.org/ns/r2rml#predicateObjectMap> <http://mapping.example.com/pom_000>.\n<http://mapping.example.com/pm_000> a <http://www.w3.org/ns/r2rml#PredicateMap>.\n<http://mapping.example.com/pom_000> <http://www.w3.org/ns/r2rml#predicateMap> <http://mapping.example.com/pm_000>.\n<http://mapping.example.com/pm_000> <http://www.w3.org/ns/r2rml#constant> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>.\n<http://mapping.example.com/pom_000> <http://www.w3.org/ns/r2rml#objectMap> <http://mapping.example.com/om_000>.\n<http://mapping.example.com/om_000> a <http://www.w3.org/ns/r2rml#ObjectMap>;\n    <http://www.w3.org/ns/r2rml#template> \"http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/{color}{size}{shape}{material}Object\";\n    <http://www.w3.org/ns/r2rml#termType> <http://www.w3.org/ns/r2rml#IRI>.\n<http://mapping.example.com/pom_001> a <http://www.w3.org/ns/r2rml#PredicateObjectMap>.\n<http://mapping.example.com/map_person_000> <http://www.w3.org/ns/r2rml#predicateObjectMap> <http://mapping.example.com/pom_001>.\n<http://mapping.example.com/pm_001> a <http://www.w3.org/ns/r2rml#PredicateMap>.\n<http://mapping.example.com/pom_001> <http://www.w3.org/ns/r2rml#predicateMap> <http://mapping.example.com/pm_001>.\n<http://mapping.example.com/pm_001> <http://www.w3.org/ns/r2rml#constant> <http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/hasDirectlyOnRight>.\n<http://mapping.example.com/pom_001> <http://www.w3.org/ns/r2rml#objectMap> <http://mapping.example.com/om_001>.\n<http://mapping.example.com/om_001> a <http://www.w3.org/ns/r2rml#ObjectMap>;\n    <http://www.w3.org/ns/r2rml#template> \"http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/{hasDirectlyOnRight}\";\n    <http://www.w3.org/ns/r2rml#termType> <http://www.w3.org/ns/r2rml#IRI>.\n<http://mapping.example.com/pom_002> a <http://www.w3.org/ns/r2rml#PredicateObjectMap>.\n<http://mapping.example.com/map_person_000> <http://www.w3.org/ns/r2rml#predicateObjectMap> <http://mapping.example.com/pom_002>.\n<http://mapping.example.com/pm_002> a <http://www.w3.org/ns/r2rml#PredicateMap>.\n<http://mapping.example.com/pom_002> <http://www.w3.org/ns/r2rml#predicateMap> <http://mapping.example.com/pm_002>.\n<http://mapping.example.com/pm_002> <http://www.w3.org/ns/r2rml#constant> <http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/hasDirectlyOnLeft>.\n<http://mapping.example.com/pom_002> <http://www.w3.org/ns/r2rml#objectMap> <http://mapping.example.com/om_002>.\n<http://mapping.example.com/om_002> a <http://www.w3.org/ns/r2rml#ObjectMap>;\n    <http://www.w3.org/ns/r2rml#template> \"http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/{hasDirectlyOnLeft}\";\n    <http://www.w3.org/ns/r2rml#termType> <http://www.w3.org/ns/r2rml#IRI>.\n<http://mapping.example.com/pom_003> a <http://www.w3.org/ns/r2rml#PredicateObjectMap>.\n<http://mapping.example.com/map_person_000> <http://www.w3.org/ns/r2rml#predicateObjectMap> <http://mapping.example.com/pom_003>.\n<http://mapping.example.com/pm_003> a <http://www.w3.org/ns/r2rml#PredicateMap>.\n<http://mapping.example.com/pom_003> <http://www.w3.org/ns/r2rml#predicateMap> <http://mapping.example.com/pm_003>.\n<http://mapping.example.com/pm_003> <http://www.w3.org/ns/r2rml#constant> <http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/hasDirectlyOnFront>.\n<http://mapping.example.com/pom_003> <http://www.w3.org/ns/r2rml#objectMap> <http://mapping.example.com/om_003>.\n<http://mapping.example.com/om_003> a <http://www.w3.org/ns/r2rml#ObjectMap>;\n    <http://www.w3.org/ns/r2rml#template> \"http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/{hasDirectlyOnFront}\";\n    <http://www.w3.org/ns/r2rml#termType> <http://www.w3.org/ns/r2rml#IRI>.\n<http://mapping.example.com/pom_004> a <http://www.w3.org/ns/r2rml#PredicateObjectMap>.\n<http://mapping.example.com/map_person_000> <http://www.w3.org/ns/r2rml#predicateObjectMap> <http://mapping.example.com/pom_004>.\n<http://mapping.example.com/pm_004> a <http://www.w3.org/ns/r2rml#PredicateMap>.\n<http://mapping.example.com/pom_004> <http://www.w3.org/ns/r2rml#predicateMap> <http://mapping.example.com/pm_004>.\n<http://mapping.example.com/pm_004> <http://www.w3.org/ns/r2rml#constant> <http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/hasDirectlyOnBehind>.\n<http://mapping.example.com/pom_004> <http://www.w3.org/ns/r2rml#objectMap> <http://mapping.example.com/om_004>.\n<http://mapping.example.com/om_004> a <http://www.w3.org/ns/r2rml#ObjectMap>;\n    <http://www.w3.org/ns/r2rml#template> \"http://www.semanticweb.org/amedeo/ontologies/2022/7/KlevR_EL/{hasDirectlyOnBehind}\";\n    <http://www.w3.org/ns/r2rml#termType> <http://www.w3.org/ns/r2rml#IRI>.\n"
        self.headers={"Accept": "*/*",
                      "Content-Type": "application/json",
                      "Origin": "https://rml.io",
                      "Accept-Language": "it-it",
                      "Host": "rml.io",
                      "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.1 Safari/605.1.15",
                      "Referer": "https://rml.io/yarrrml/matey/",
                      "Accept-Encoding": "gzip, deflate, br",
                      "Connection": "keep-alive"}
    def annotate(self):
        js = {
            "rml": self.rml_mapping,
            "sources": {"data.json": json.dumps(self.object)}
            }
        response = requests.post("https://rml.io/api/rmlmapper/execute", json=js, headers=self.headers)
        return json.loads(unicodedata.normalize('NFKD', (response.text)).encode('ascii', 'ignore'))["output"]
       
